@page "/Grids"

@code {
    // Grids
}
<div>
    <Button Type="@ButtonType.Text">Grid 栅格</Button>
</div>
<Divider />
<div>
    <GridRow>
        <GridCol Span="24">col-24</GridCol>
    </GridRow>
    <GridRow>
        <GridCol Span="12">col-12</GridCol>
        <GridCol Span="12">col-12</GridCol>
    </GridRow>
    <GridRow>
        <GridCol Span="8">col-8</GridCol>
        <GridCol Span="8">col-8</GridCol>
        <GridCol Span="8">col-8</GridCol>
    </GridRow>
    <GridRow>
        <GridCol Span="6">col-6</GridCol>
        <GridCol Span="6">col-6</GridCol>
        <GridCol Span="6">col-6</GridCol>
        <GridCol Span="6">col-6</GridCol>
    </GridRow>
</div>
@{
    string style = "background: #0092ff; padding: 8px 0;";
    Dictionary<string, int> gutter = new()
            {
                ["xs"] = 8,
                ["sm"] = 16,
                ["md"] = 24,
                ["lg"] = 32,
                ["xl"] = 48,
                ["xxl"] = 64
            };
}
<Divider />
<div>
    <Divider Orientation="left">Horizontal</Divider>
    <GridRow Gutter="16">
        <GridCol Class="gutter-row" Span="6">
            <div style="@style">col-6</div>
        </GridCol>
        <GridCol Class="gutter-row" Span="6">
            <div style="@style">col-6</div>
        </GridCol>
        <GridCol Class="gutter-row" Span="6">
            <div style="@style">col-6</div>
        </GridCol>
        <GridCol Class="gutter-row" Span="6">
            <div style="@style">col-6</div>
        </GridCol>
    </GridRow>
    <Divider Orientation="left">Responsive</Divider>
    <GridRow Gutter="@gutter">
        <GridCol Class="gutter-row" Span="6">
            <div style="@style">col-6</div>
        </GridCol>
        <GridCol Class="gutter-row" Span="6">
            <div style="@style">col-6</div>
        </GridCol>
        <GridCol Class="gutter-row" Span="6">
            <div style="@style">col-6</div>
        </GridCol>
        <GridCol Class="gutter-row" Span="6">
            <div style="@style">col-6</div>
        </GridCol>
    </GridRow>
    <Divider Orientation="left">Vertical</Divider>
    <GridRow Gutter="(16,24)">
        <GridCol Class="gutter-row" Span="6">
            <div style="@style">col-6</div>
        </GridCol>
        <GridCol Class="gutter-row" Span="6">
            <div style="@style">col-6</div>
        </GridCol>
        <GridCol Class="gutter-row" Span="6">
            <div style="@style">col-6</div>
        </GridCol>
        <GridCol Class="gutter-row" Span="6">
            <div style="@style">col-6</div>
        </GridCol>
        <GridCol Class="gutter-row" Span="6">
            <div style="@style">col-6</div>
        </GridCol>
        <GridCol Class="gutter-row" Span="6">
            <div style="@style">col-6</div>
        </GridCol>
        <GridCol Class="gutter-row" Span="6">
            <div style="@style">col-6</div>
        </GridCol>
        <GridCol Class="gutter-row" Span="6">
            <div style="@style">col-6</div>
        </GridCol>
    </GridRow>

</div>

<style>
    .gutter-box {
        padding: 8px 0;
        background: #00a0e9;
    }
</style>
<Divider />
<div>
    <GridRow>
        <GridCol Span="8">
            col-8
        </GridCol>
        <GridCol Span="8" Offset="8">
            col-8
        </GridCol>
    </GridRow>
    <GridRow>
        <GridCol Span="6" Offset="6">
            col-6 col-offset-6
        </GridCol>
        <GridCol Span="6" Offset="6">
            col-6 col-offset-6
        </GridCol>
    </GridRow>
    <GridRow>
        <GridCol Span="12" Offset="6">
            col-12 col-offset-6
        </GridCol>
    </GridRow>
</div>
@code {

}
<Divider />
<div>
    <GridRow>
        <GridCol Span="18" Push="6">
            col-18 col-push-6
        </GridCol>
        <GridCol Span="6" Pull="18">
            col-6 col-pull-18
        </GridCol>
    </GridRow>
</div>
<Divider />
<div>
    <Divider Orientation="left">sub-element align left</Divider>
    <GridRow Justify="start">
        <GridCol Span="4">col-4</GridCol>
        <GridCol Span="4">col-4</GridCol>
        <GridCol Span="4">col-4</GridCol>
        <GridCol Span="4">col-4</GridCol>
    </GridRow>

    <Divider Orientation="left">sub-element align center</Divider>
    <GridRow Justify="center">
        <GridCol Span="4">col-4</GridCol>
        <GridCol Span="4">col-4</GridCol>
        <GridCol Span="4">col-4</GridCol>
        <GridCol Span="4">col-4</GridCol>
    </GridRow>

    <Divider Orientation="left">sub-element align right</Divider>
    <GridRow Justify="end">
        <GridCol Span="4">col-4</GridCol>
        <GridCol Span="4">col-4</GridCol>
        <GridCol Span="4">col-4</GridCol>
        <GridCol Span="4">col-4</GridCol>
    </GridRow>


    <Divider Orientation="left">sub-element monospaced arrangement</Divider>
    <GridRow Justify="space-between">
        <GridCol Span="4">col-4</GridCol>
        <GridCol Span="4">col-4</GridCol>
        <GridCol Span="4">col-4</GridCol>
        <GridCol Span="4">col-4</GridCol>
    </GridRow>


    <Divider Orientation="left">sub-element align full</Divider>
    <GridRow Justify="space-around">
        <GridCol Span="4">col-4</GridCol>
        <GridCol Span="4">col-4</GridCol>
        <GridCol Span="4">col-4</GridCol>
        <GridCol Span="4">col-4</GridCol>
    </GridRow>
</div>

<style>
    #components-grid-demo-flex [class~='ant-row'] {
        background: rgba(128, 128, 128, 0.08);
    }
</style>
<Divider />
<div>
    <Divider Orientation="left">Align Top</Divider>
    <GridRow Justify="center" Align="top">
        <GridCol Span="4">
            @DemoBox((100, "col-4"))
        </GridCol>
        <GridCol Span="4">
            @DemoBox((50, "col-4"))
        </GridCol>
        <GridCol Span="4">
            @DemoBox((120, "col-4"))
        </GridCol>
        <GridCol Span="4">
            @DemoBox((80, "col-4"))
        </GridCol>
    </GridRow>

    <Divider Orientation="left">Align Middle</Divider>
    <GridRow Justify="space-around" Align="middle">
        <GridCol Span="4">
            @DemoBox((100, "col-4"))
        </GridCol>
        <GridCol Span="4">
            @DemoBox((50, "col-4"))
        </GridCol>
        <GridCol Span="4">
            @DemoBox((120, "col-4"))
        </GridCol>
        <GridCol Span="4">
            @DemoBox((80, "col-4"))
        </GridCol>
    </GridRow>

    <Divider Orientation="left">Align Bottom</Divider>
    <GridRow Justify="space-between" Align="bottom">
        <GridCol Span="4">
            @DemoBox((100, "col-4"))
        </GridCol>
        <GridCol Span="4">
            @DemoBox((50, "col-4"))
        </GridCol>
        <GridCol Span="4">
            @DemoBox((120, "col-4"))
        </GridCol>
        <GridCol Span="4">
            @DemoBox((80, "col-4"))
        </GridCol>
    </GridRow>
</div>

<style>
    #components-grid-demo-flex-align [class~='ant-row'] {
        background: rgba(128, 128, 128, 0.08);
    }
</style>
<Divider />

@code {
    RenderFragment<(int value, string children)> DemoBox = props =>@<p class="@($"height-{props.value}")">@props.children</p>;
}
<div>
    <Divider Orientation="left">Normal</Divider>
    <GridRow>
        <GridCol Span="6" Order="4">
            1 col-order-4
        </GridCol>
        <GridCol Span="6" Order="3">
            2 col-order-3
        </GridCol>
        <GridCol Span="6" Order="2">
            3 col-order-2
        </GridCol>
        <GridCol Span="6" Order="1">
            4 col-order-1
        </GridCol>
    </GridRow>
    <Divider Orientation="left">Responsive</Divider>
    <GridRow>
        <GridCol Span="6" Xs="new EmbeddedProperty{ Order= 1 }" Sm="new EmbeddedProperty{ Order= 2 }" Md="new EmbeddedProperty{ Order= 3 }" Lg="new EmbeddedProperty{ Order= 4 }">
            1 col-order-responsive
        </GridCol>
        <GridCol Span="6" Xs="new EmbeddedProperty{ Order= 2 }" Sm="new EmbeddedProperty{ Order= 1 }" Md="new EmbeddedProperty{ Order= 4 }" Lg="new EmbeddedProperty{ Order= 3 }">
            2 col-order-responsive
        </GridCol>
        <GridCol Span="6" Xs="new EmbeddedProperty{ Order= 3 }" Sm="new EmbeddedProperty{ Order= 4 }" Md="new EmbeddedProperty{ Order= 2 }" Lg="new EmbeddedProperty{ Order= 1 }">
            3 col-order-responsive
        </GridCol>
        <GridCol Span="6" Xs="new EmbeddedProperty{ Order= 4 }" Sm="new EmbeddedProperty{ Order= 3 }" Md="new EmbeddedProperty{ Order= 1 }" Lg="new EmbeddedProperty{ Order= 2 }">
            4 col-order-responsive
        </GridCol>
    </GridRow>
</div>

<style>
    #components-grid-demo-flex-order [class~='ant-row'] {
        background: rgba(128, 128, 128, 0.08);
    }
</style>
<Divider />
<div>
    <Divider Orientation="left">Percentage columns</Divider>
    <GridRow>
        <GridCol Flex="2">2 / 5</GridCol>
        <GridCol Flex="3">3 / 5</GridCol>
    </GridRow>
    <Divider Orientation="left">Fill rest</Divider>
    <GridRow>
        <GridCol Flex=@("100px")>100px</GridCol>
        <GridCol Flex=@("auto")>Fill Rest</GridCol>
    </GridRow>
    <Divider Orientation="left">Raw flex style</Divider>
    <GridRow>
        <GridCol Flex=@("1 1 200px")>1 1 200px</GridCol>
        <GridCol Flex=@("0 1 300px")>0 1 300px</GridCol>
    </GridRow>

    <GridRow Wrap="false">
        <GridCol Flex=@("none")>
            <div style="padding: 0 16px">none</div>
        </GridCol>
        <GridCol Flex=@("auto")>auto with no-wrap</GridCol>
    </GridRow>
</div>
<Divider />
<GridRow>
    <GridCol Xs="2" Sm="4" Md="6" Lg="8" Xl="10">
        GridCol
    </GridCol>
    <GridCol Xs="20" Sm="16" Md="12" Lg="8" Xl="4">
        GridCol
    </GridCol>
    <GridCol Xs="2" Sm="4" Md="6" Lg="8" Xl="10">
        GridCol
    </GridCol>
</GridRow>
<Divider />

<GridRow>
    <GridCol Xs="@Property(5,1)" Lg="@Property(6,2)">
        GridCol
    </GridCol>
    <GridCol Xs="@Property(11,1)" Lg="@Property(6,2)">
        GridCol
    </GridCol>
    <GridCol Xs="@Property(5,1)" Lg="@Property(6,2)">
        GridCol
    </GridCol>
</GridRow>

@code {
    EmbeddedProperty Property(int span, int offset) => new() { Span = span, Offset = offset };
}